@code {
    string externalJsonPath = @"C:\Users\Vinod\Documents\templates.json";
    List<Template> templates = new();
    string selectedTemplateName;
    string selectedTemplateImage;
    string statusMessage;

    public class Template
    {
        public string Name { get; set; }
        public string ImageUrl { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (File.Exists(externalJsonPath))
            {
                var json = await File.ReadAllTextAsync(externalJsonPath);
                templates = JsonSerializer.Deserialize<List<Template>>(json);
            }
            else
            {
                statusMessage = $"File not found at {externalJsonPath}";
            }
        }
        catch (Exception ex)
        {
            statusMessage = $"Error loading templates: {ex.Message}";
        }
    }

    void OnTemplateChange(ChangeEventArgs e)
    {
        selectedTemplateName = e?.Value?.ToString();
        var selected = templates.FirstOrDefault(t => t.Name == selectedTemplateName);
        selectedTemplateImage = selected?.ImageUrl;
    }
}
