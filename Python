from selenium import webdriver
from selenium.webdriver.edge.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from bs4 import BeautifulSoup
import time

def scroll_to_bottom(driver, pause_time=2):
    last_height = driver.execute_script("return document.body.scrollHeight")
    
    while True:
        driver.execute_script("window.scrollTo(0, document.body.scrollHeight);")
        time.sleep(pause_time)
        new_height = driver.execute_script("return document.body.scrollHeight")
        if new_height == last_height:
            break
        last_height = new_height

def extract_and_print_nested_divs(url, class_names):
    options = Options()
    options.use_chromium = True
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-gpu')
    # options.add_argument('--headless')  # Optional: disable for visual debug

    driver = webdriver.Edge(options=options)

    try:
        driver.get(url)

        # Wait for at least one class to appear
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CLASS_NAME, class_names[0]))
        )

        scroll_to_bottom(driver)  # <--- scroll to load all dynamic content
        html = driver.page_source

    finally:
        driver.quit()

    soup = BeautifulSoup(html, 'html.parser')

    def print_nested_divs(div, level=0):
        indent = "  " * level
        if div.name == 'div':
            text = div.get_text(strip=True)
            if text:
                print(f"{indent}- {text}")
        for child in div.find_all('div', recursive=False):
            print_nested_divs(child, level + 1)

    for cls in class_names:
        divs = soup.find_all('div', class_=cls)
        for div in divs:
            print(f"\n[{cls}]")
            print_nested_divs(div)

# Example usage
url = "https://example.com"  # Replace with your actual URL
class_list = ['Display1', 'Display2', 'Display3']
extract_and_print_nested_divs(url, class_list)
